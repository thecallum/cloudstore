# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  windows: circleci/windows@2.2.0
  aws-cli: circleci/aws-cli@2.0

executors:
  docker-dotnet:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1

commands:
  install-aws-extensions:
    steps:
      - run: dotnet tool install -g Amazon.Lambda.Tools
  deploy-to-lambda:
    parameters:
      function-name: 
        type: string
    steps:
      run: dotnet-lambda deploy-function --function-name <<parameters.function-name>>

jobs:
  build-and-test-document-service:
    machine: true # Use a Linux VM instead of docker environment
    steps:
      - checkout
      - run:
          working_directory: ./backend/document-service/DocumentService
          name: build
          command: docker-compose build test
      - run:
          working_directory: ./backend/document-service/DocumentService
          name: Run tests
          command: docker-compose run test
  build-and-test-listener-service:
    machine: true # Use a Linux VM instead of docker environment
    working_directory: ./backend/DocumentServiceListener/DocumentServiceListener
    steps:
      - checkout
      - run:
          name: build
          command: docker-compose build listener-tests
      - run:
          name: Run tests
          command: docker-compose run listener-tests
  deploy-document-service:
    executor: windows/default
    working_directory: ./backend/document-service/DocumentService/DocumentService
    steps:
      - checkout
      - install-aws-extensions
      - deploy-to-lambda:
          function-name: "DocumentService"
  deploy-listener-service:
    executor: windows/default
    working_directory: ./backend/DocumentServiceListener/DocumentServiceListener/DocumentServiceListener
    steps:
      - checkout
      - install-aws-extensions
      - deploy-to-lambda:
          function-name: "DocumentServiceListener"
  deploy-frontend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - aws-cli/setup
        # - run:
          # name: install-npm
          # command: 'sudo npm install -g npm@latest'
      - run:
          name: install-yarn
          command: 'sudo npm install --global yarn'
      - run:
          working_directory: ./frontend
          name: init-yarn
          command: yarn install --production=true
      - run:
          working_directory: ./frontend
          name: build
          command: CI=false yarn build
      - run:
          working_directory: ./frontend/build
          name: deploy
          command: aws s3 sync . s3://cloudstore.thecallum.com
      - run:
          # working_directory: ./backend/document-service/DocumentService
          name: invalidate-cloudfront
          command: aws cloudfront create-invalidation --distribution-id E23ZX2UPNCXM1D --paths "/*"


 

workflows:
  test-and-deploy:
    jobs:
      # - build-and-test-document-service
      # - build-and-test-listener-service
      # - deploy-document-service:
      #     requires:
      #       - build-and-test-document-service
      #     filters:
      #       branches:
      #         only: main
      # - deploy-listener-service:
      #     requires:
      #       - build-and-test-listener-service
      #     filters:
      #       branches:
      #         only: main
      - deploy-frontend
          # filters:
          #   branches:
          #     only: main

